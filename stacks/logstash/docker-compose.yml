---
version: '3.3'

services:
  app:
    image: docker.elastic.co/logstash/logstash:${STACK_VERSION}
    networks:
      - freer_network
    volumes:
      - freer_logstash_pipeline_conf_nfs:/usr/share/logstash/pipeline
      - freer_elasticsearch_certs_nfs:/etc/logstash/config/certs
    command: 'logstash -f /usr/share/logstash/pipeline/logstash.conf'
    environment:
      - xpack.monitoring.enabled=true
      - xpack.monitoring.elasticsearch.hosts=https://${ELASTICSEARCH_HOST}:9200
      - xpack.monitoring.elasticsearch.ssl.certificate_authority=/etc/logstash/config/certs/ca/ca.crt
      - xpack.monitoring.elasticsearch.username=${LOGSTASH_USER}
      - xpack.monitoring.elasticsearch.password=${LOGSTASH_PASSWORD}
      - xpack.monitoring.collection.interval=10s
      - xpack.monitoring.collection.pipeline.details.enabled=true
    ports:
      - 12201:12201/udp
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.hostname == red
      restart_policy:
        condition: on-failure 
        max_attempts: 3 
        
# have to reference external network, otherwise a new scoped network is
# created during stack deploy.
# https://docs.docker.com/compose/compose-file/#external
networks:
  freer_network:
    external: true

# have to replicate dependent volume definitions
# to ensure all nodes are setup correctly.
# https://docs.docker.com/compose/compose-file/#volumes-top-level-element
volumes:
  freer_logstash_pipeline_conf_nfs:
    driver: local
    driver_opts:
      type: nfs
      device: ':/home/jon/nfs/exports/logstash_pipeline_conf'
      o: 'addr=192.168.1.2'
  freer_elasticsearch_certs_nfs:
    driver: local
    driver_opts:
      type: nfs
      device: ':/home/jon/nfs/exports/elasticsearch_certs'
      o: 'addr=192.168.1.2'
