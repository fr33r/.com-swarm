---
version: "3.3"

# https://grafana.com/docs/grafana-cloud/quickstart/docker-compose-linux/
services:
  app:
    # https://hub.docker.com/r/grafana/grafana-oss
    image: grafana/grafana-oss:${STACK_VERSION:-latest}
    volumes:
      - nas_conf_nfs:/var/lib/grafana
    networks:
      - freer_network
    ports:
      - 3005:3000
    environment:
      - GF_SECURITY_ADMIN_USER__FILE=/run/secrets/grafana_admin_user
      - GF_SECURITY_ADMIN_PASSWORD__FILE=/run/secrets/grafana_admin_password
      - GF_DATABASE_TYPE=mysql
      - GF_DATABASE_HOST=db
      - GF_DATABASE_NAME=grafana
      - GF_DATABASE_USER__FILE=/run/secrets/grafana_db_user
      - GF_DATABASE_PASSWORD__FILE=/run/secrets/grafana_db_password
      - GF_DATABASE_MAX_IDLE_CONN=5
      - GF_DATABASE_MAX_OPEN_CONN=5
    deploy:
      mode: replicated
      replicas: 2
      restart_policy:
        condition: on-failure
        max_attempts: 3
      resources:
        limits:
          memory: 128mb
        reservations:
          memory: 128mb
    logging:
      driver: gelf
      options:
        gelf-address: "udp://0.0.0.0:12201"
        tag: "{{.Name}}"
    secrets:
      - grafana_admin_user
      - grafana_admin_password
      - grafana_db_user
      - grafana_db_password

  db:
    image: mysql:${DB_STACK_VERSION:-8.1.0}
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - local_mysql_data:/var/lib/mysql
    networks:
      - freer_network
    environment:
      - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/grafana_db_root_password
      - MYSQL_DATABASE=grafana
      - MYSQL_USER_FILE=/run/secrets/grafana_db_user
      - MYSQL_PASSWORD_FILE=/run/secrets/grafana_db_password
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.mysql == true
      restart_policy:
        condition: on-failure
        max_attempts: 3
      resources:
        limits:
          memory: 2gb
        reservations:
          memory: 1gb
    logging:
      driver: gelf
      options:
        gelf-address: "udp://0.0.0.0:12201"
        tag: "{{.Name}}"
    secrets:
      - grafana_db_user
      - grafana_db_password
      - grafana_db_root_password

  db_dumper:
    # https://hub.docker.com/r/tiredofit/db-backup/
    image: tiredofit/db-backup:${DB_DUMPER_STACK_VERSION:-4.0.32}
    volumes:
      - nas_mysql_dumps_nfs:/backup
    environment:
      - TIMEZONE=America/Los_Angeles
      - DB01_TYPE=mysql
      - DB01_HOST=db
      - DB01_NAME_FILE=/run/secrets/grafana_db
      - DB01_USER_FILE=/run/secrets/grafana_db_user
      - DB01_PASS_FILE=/run/secrets/grafana_db_password
      - DB01_DUMP_INTERVAL=60 # Backup every 60 minutes
      - DB01_DUMP_BEGIN=+1 # (override) Backup starts immediately
      - DB01_CLEANUP_TIME=180 # (override) Cleanup backups they are older than 180 minutes
      - DB01_CHECKSUM=SHA1 # (override) Create a SHA1 checksum
      - DB01_COMPRESSION=GZ # (override) Compress with GZIP
    networks:
      - freer_network
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 3
      resources:
        limits:
          memory: 512mb
        reservations:
          memory: 256mb
    logging:
      driver: gelf
      options:
        gelf-address: "udp://0.0.0.0:12201"
        tag: "{{.Name}}"
    secrets:
      - grafana_db
      - grafana_db_user
      - grafana_db_password

secrets:
  grafana_admin_user:
    external: true
  grafana_admin_password:
    external: true
  grafana_db:
    external: true
  grafana_db_user:
    external: true
  grafana_db_password:
    external: true
  grafana_db_root_password:
    external: true

# have to reference external network, otherwise a new scoped network is
# created during stack deploy.
# https://docs.docker.com/compose/compose-file/#external
networks:
  freer_network:
    external: true

# have to replicate dependent volume definitions
# to ensure all nodes are setup correctly.
# https://docs.docker.com/compose/compose-file/#volumes-top-level-element
volumes:
  nas_conf_nfs:
    driver: local
    driver_opts:
      type: nfs
      device: ":/volume1/Grafana-Configuration"
      o: "addr=nas-ii.fr33r.com"
  nas_mysql_dumps_nfs:
    driver: local
    driver_opts:
      type: nfs
      device: ":/volume1/Grafana-Database-Backups"
      o: "addr=nas-ii.fr33r.com"
  local_mysql_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "/home/grafana/db/data"
