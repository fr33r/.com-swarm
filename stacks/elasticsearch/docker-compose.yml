---
version: '3.3'

services:
  setup:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    volumes:
      - freer_nas_elasticsearch_certs_nfs:/usr/share/elasticsearch/config/certs
    networks:
      - freer_network
    user: "0"
    deploy:
      mode: replicated
      replicas: 1
    command: >
      bash -c '
        if [ x${ELASTIC_PASSWORD} == x ]; then
          echo "Set the ELASTIC_PASSWORD environment variable in the .env file";
          exit 1;
        elif [ x${KIBANA_PASSWORD} == x ]; then
          echo "Set the KIBANA_PASSWORD environment variable in the .env file";
          exit 1;
        fi;
        if [ ! -f config/certs/ca.zip ]; then
          echo "Creating CA";
          bin/elasticsearch-certutil ca --silent --pem -out config/certs/ca.zip;
          unzip config/certs/ca.zip -d config/certs;
        fi;
        if [ ! -f config/certs/certs.zip ]; then
          echo "Creating certs";
          echo -ne \
          "instances:\n"\
          "  - name: ${ELASTICSEARCH_HOST}\n"\
          "    dns:\n"\
          "      - ${ELASTICSEARCH_HOST}\n"\
          "      - localhost\n"\
          "    ip:\n"\
          "      - 127.0.0.1\n"\
          > config/certs/instances.yml;
          bin/elasticsearch-certutil cert --silent --pem -out config/certs/certs.zip --in config/certs/instances.yml --ca-cert config/certs/ca/ca.crt --ca-key config/certs/ca/ca.key;
          unzip config/certs/certs.zip -d config/certs;
        fi;
        echo "Setting file permissions"
        chown -R root:root config/certs;
        find . -type d -exec chmod 750 \{\} \;;
        find . -type f -exec chmod 640 \{\} \;;
        echo "Waiting for Elasticsearch availability";
        until curl -s --cacert config/certs/ca/ca.crt https://${ELASTICSEARCH_HOST}:9200 | grep -q "missing authentication credentials"; do sleep 30; done;
        echo "Setting kibana_system password";
        until curl -s -X POST --cacert config/certs/ca/ca.crt -u elastic:${ELASTIC_PASSWORD} -H "Content-Type: application/json" https://${ELASTICSEARCH_HOST}:9200/_security/user/kibana_system/_password -d "{\"password\":\"${KIBANA_PASSWORD}\"}" | grep -q "^{}"; do sleep 10; done;
        echo "All done!";
      '
    healthcheck:
      test: ["CMD-SHELL", "[ -f config/certs/${ELASTICSEARCH_HOST}/${ELASTICSEARCH_HOST}.crt ]"]
      interval: 1s
      timeout: 5s
      retries: 120

  app:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    networks:
      freer_network:
        aliases:
          - ${ELASTICSEARCH_HOST}
    volumes:
      - freer_nas_elasticsearch_certs_nfs:/usr/share/elasticsearch/config/certs
      - freer_nas_elasticsearch_conf_nfs:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
      - node.name=elasticsearch_app
      - cluster.name=${CLUSTER_NAME}
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - xpack.license.self_generated.type=${LICENSE}
      - bootstrap.memory_lock=true
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=certs/${ELASTICSEARCH_HOST}/${ELASTICSEARCH_HOST}.key
      - xpack.security.http.ssl.certificate=certs/${ELASTICSEARCH_HOST}/${ELASTICSEARCH_HOST}.crt
      - xpack.security.http.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.http.ssl.verification_mode=certificate
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.key=certs/${ELASTICSEARCH_HOST}/${ELASTICSEARCH_HOST}.key
      - xpack.security.transport.ssl.certificate=certs/${ELASTICSEARCH_HOST}/${ELASTICSEARCH_HOST}.crt
      - xpack.security.transport.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.transport.ssl.verification_mode=certificate
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure 
        max_attempts: 3 
      resources:
        limits:
          memory: 1gb
        reservations:
          memory: 1gb
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120
        
# have to reference external network, otherwise a new scoped network is
# created during stack deploy.
# https://docs.docker.com/compose/compose-file/#external
networks:
  freer_network:
    external: true

# have to replicate dependent volume definitions
# to ensure all nodes are setup correctly.
# https://docs.docker.com/compose/compose-file/#volumes-top-level-element
volumes:
  freer_nas_elasticsearch_certs_nfs:
    driver: local
    driver_opts:
      type: nfs
      device: ':/export/Elasticsearch-Certificates'
      o: 'addr=nas.fr33r.com'
  freer_nas_elasticsearch_conf_nfs:
    driver: local
    driver_opts:
      type: nfs
      device: ':/export/Elasticsearch-Configuration'
      o: 'addr=nas.fr33r.com'
